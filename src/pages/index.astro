---
import Layout from '../layouts/Root.astro';

const isArticleSeries = article => article.frontmatter.collection_id != null;

const series = new Map()

// Only single heading articles
const articles = Array.from(await Astro.glob('./articles/**/*.md'))
  .reduce((articles, article) => {
    if (isArticleSeries(article)) {
      const { part, collection_id } = article.frontmatter;
      series.set(
        collection_id,
        (series.get(collection_id) ?? 0) + 1,
      )

      return part === 1 
        ? articles.concat({...article, count: () => series.get(collection_id)}) 
        : articles;
    }

    return articles.concat(article)
  }, [])
---

<Layout title="PunGy:/Home">
    <div id="layout">
        <aside>
            <!-- about myself, my picture and links to social --->
            <img id="myself-photo" src="/images/myself.jpg" alt="My picture" />
            <p>
                Hi, I am <strong>Maksim</strong>, a software engineer â€” a Computer Science enjoyer.
            </p>
            <p>
                You can find me on <a href="https://github.com/PunGy">GitHub</a> and <a href="https://www.linkedin.com/in/pungy/">LinkedIn</a>.
            </p>
        </aside>
        <main class="semantic">
      {articles.map(({ frontmatter: info, url, count }) => (
                <a href={url} class="article block">
                    <h1>{info.title}</h1>
                    <p>{info.description}</p>
                    {count ? (
                      <span class="meta">{count()} pages</span>
                    ) : null}
                </a>
            ))}
        </main>
    </div>
</Layout>

<style>
    #layout {
        display: flex;
        padding: 1rem;
        position: relative;
        justify-content: center;
    }
    main {
        padding: 0;
        display: flex;
        flex-direction: column;
        gap: 1.25rem;
    }
    p {
        padding: 0 1rem;
    }
    h1 {
        margin: 0.5rem;
    }
    .article {
        text-decoration: none;
        color: var(--primary-fg);
        display: block;
        position: relative;
        max-width: 700px;
        margin: 0 auto;
        padding: 1rem;
    }
    .article .meta {
      color: var(--shadow-fg);
    }

    aside {
        width: 300px;
        padding: 0.5rem;
        position: absolute;
        left: 2rem;
    }

    #myself-photo {
        width: 100%;
        border-radius: var(--radius) var(--radius) 0 0;
    }

    @media(max-width: 1500px) {
        #layout {
            justify-content: flex-start;
        }
        main {
            flex: 1 1 auto;
        }
        aside {
            position: initial;
        }
    }
    @media (max-width: 1100px) {
        #layout {
            flex-direction: column;
        }
        aside {
            display: none;
        }
    }
    @media (max-width: 700px) {
        #layout {
            padding: 1rem 0;
        }
        h1 {
            font-size: 1.5rem;
        }
    }
</style>
